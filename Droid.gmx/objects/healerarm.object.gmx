<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>healerleftup</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>healerleftup</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth=-y-100;
radius=180;
justhealed=false;
oldlad=d_Right;
image_speed=0.2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>justhealed=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>plx = player.x;
ply = player.y;

rx = player.x;
ry = player.y;

if (instance_exists(r2d2)){
    rx = r2d2.x;
    ry = r2d2.y;
}


dist = min(sqrt((plx-x)*(plx-x)+(ply-y)*(ply-y)),sqrt((rx-x)*(rx-x)+(ry-y)*(ry-y)));

healr2=false;
if ( ((plx-x)*(plx-x)+(ply-y)*(ply-y))&gt;((rx-x)*(rx-x)+(ry-y)*(ry-y)) ){healr2=true;}
if ((dist&lt;radius)&amp;&amp;(!justhealed)){
    if((healr2)&amp;&amp;(r2d2.armor&lt;4)){
        r2d2.armor+=1;
        justhealed=true;
        alarm[0]=3*room_speed;
    }
    if((!healr2)&amp;&amp;(player.armor&lt;4)){
        player.armor+=1;
        justhealed=true;
        alarm[0]=3*room_speed;
    }
}


tx=0;ty=0;
if(((plx-x)*(plx-x)+(ply-y)*(ply-y))&lt;=((rx-x)*(rx-x)+(ry-y)*(ry-y))){
    tx=plx; ty=ply;
}else{
    tx=rx;ty=ry;
}

        var sinus=(ty-y)/dist;
        var cosinus=(tx-x)/dist;
        if(cosinus&gt;0.924){oldlad=d_Right;};
        if((cosinus&lt;=0.924)&amp;&amp;(cosinus&gt;0.383)&amp;&amp;(sinus&lt;0)){oldlad=d_UpRight;};
        if((cosinus&lt;=0.924)&amp;&amp;(cosinus&gt;0.383)&amp;&amp;(sinus&gt;0)){oldlad=d_DownRight;};
        if((cosinus&lt;=0.383)&amp;&amp;(cosinus&gt;-0.383)&amp;&amp;(sinus&lt;0)){oldlad=d_Up;};
        if((cosinus&lt;=0.383)&amp;&amp;(cosinus&gt;-0.383)&amp;&amp;(sinus&gt;0)){oldlad=d_Down;};
        if((cosinus&lt;=-0.383)&amp;&amp;(cosinus&gt;-0.924)&amp;&amp;(sinus&lt;0)){oldlad=d_UpLeft;};
        if((cosinus&lt;=-0.383)&amp;&amp;(cosinus&gt;-0.924)&amp;&amp;(sinus&gt;0)){oldlad=d_DownLeft;};
        if(cosinus&lt;=-0.924){oldlad=d_Left;};
        
if ((dist&lt;radius)&amp;&amp;(image_index!=9)){
    image_speed=0.2;       
        switch oldlad
            {
                case d_Up:
                     {
                      sprite_index=healerup; break;
                     }
                case d_Down:
                     {
                      sprite_index=healerdown; break;     
                     }
                case d_Left:
                     {
                      sprite_index=healerleft; break;        
                     }
                case d_Right:
                     {
                      sprite_index=healerright; break;        
                     }
                case d_UpLeft:
                     {
                      sprite_index=healerleftup; break;
                     }
                case d_UpRight:
                     {
                      sprite_index=healerrightup; break;
                     }
                case d_DownRight:
                     {
                      sprite_index=healerrightdown; break;
                     }
                case d_DownLeft:
                     {
                      sprite_index=healerleftdown; break;
                     }
            }
}

if ((dist&gt;radius)&amp;&amp;(image_index!=0)){
    image_speed=-0.2;       
        switch oldlad
            {
                case d_Up:
                     {
                      sprite_index=healerup; break;
                     }
                case d_Down:
                     {
                      sprite_index=healerdown; break;     
                     }
                case d_Left:
                     {
                      sprite_index=healerleft; break;        
                     }
                case d_Right:
                     {
                      sprite_index=healerright; break;        
                     }
                case d_UpLeft:
                     {
                      sprite_index=healerleftup; break;
                     }
                case d_UpRight:
                     {
                      sprite_index=healerrightup; break;
                     }
                case d_DownRight:
                     {
                      sprite_index=healerrightdown; break;
                     }
                case d_DownLeft:
                     {
                      sprite_index=healerleftdown; break;
                     }
            }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (image_speed&lt;0){
    image_index=0;
}else{
    image_index=9;
}
image_speed=0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
